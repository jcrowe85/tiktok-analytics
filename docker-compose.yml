version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tiktok-analytics-postgres
    environment:
      POSTGRES_DB: tiktok_analytics
      POSTGRES_USER: tiktok_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tiktok_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tiktok_user -d tiktok_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Job Queue
  redis:
    image: redis:7-alpine
    container_name: tiktok-analytics-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  tiktok-analytics:
    build: .
    container_name: tiktok-analytics
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://tiktok_user:${POSTGRES_PASSWORD:-tiktok_secure_password}@postgres:5432/tiktok_analytics
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: tiktok-analytics-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx-simple.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/archive/analytics.tryfleur.com/fullchain1.pem:/etc/nginx/ssl/cert.pem:ro
      - /etc/letsencrypt/archive/analytics.tryfleur.com/privkey1.pem:/etc/nginx/ssl/key.pem:ro
    depends_on:
      - tiktok-analytics
    command: >
      sh -c "mkdir -p /etc/nginx/ssl && 
             nginx -g 'daemon off;'"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
